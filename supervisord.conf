[inet_http_server]                                                              ; inet (TCP) server disabled by default
port=127.0.0.1:9001                                                             ; (ip_address:port specifier, *:port for all iface)
username=user                                                                   ; (default is no username (open server))
password=who                                                                    ; (default is no password (open server))

[supervisord]
logfile=./supervisor.d/supervisord.log                                          ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=5MB                                                            ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=5                                                               ; (num of main logfile rotation backups;default 10)
loglevel=info                                                                   ; (log level;default info; others: debug,warn,trace)
pidfile=./supervisor.d/supervisord.pid                                          ; (supervisord pidfile;default supervisord.pid)
nodaemon=false                                                                  ; (start in foreground if true;default false)
minfds=1024                                                                     ; (min. avail startup file descriptors;default 1024)
minprocs=200                                                                    ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:9001                                                 ; use an http:// url to specify an inet socket
username=user                                                                   ; should be same as http_username if set
password=who                                                                    ; should be same as http_password if set

[program:superset_server]
command=superset runserver
process_name=%(program_name)s_%(process_num)s                                   ; process_name expr (default %(program_name)s)
numprocs=1                                                                      ; number of processes copies to start (def 1)
stopasgroup=true                                                                ; to kill gunicorn processes spawned by superset
stdout_logfile=./supervisor.d/superset_server_%(process_num)s_stdout.log        ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=1MB                                                     ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=5                                                        ; # of stdout logfile backups (default 10)
stdout_events_enabled=false                                                     ; emit events on stdout writes (default false)
stderr_logfile=./supervisor.d/superset_server_%(process_num)s_stderr.log        ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=1MB                                                     ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=5                                                        ; # of stderr logfile backups (default 10)
stderr_events_enabled=false                                                     ; emit events on stderr writes (default false)

[program:superset_worker]
environment=C_FORCE_ROOT="true"
command=superset worker
process_name=%(program_name)s_%(process_num)s
numprocs=1
stopasgroup=true
stdout_logfile=./supervisor.d/superset_worker_%(process_num)s_stdout.log
stdout_logfile_maxbytes=1MB
stdout_logfile_backups=5
stdout_events_enabled=false
stderr_logfile=./supervisor.d/superset_worker_%(process_num)s_stderr.log
stderr_logfile_maxbytes=1MB
stderr_logfile_backups=5
stderr_events_enabled=false

[group:superset]
programs=superset_worker,superset_server                                        ; each refers to 'x' in [program:x] definitions
